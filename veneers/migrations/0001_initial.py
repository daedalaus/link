# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2020-04-03 15:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('op', models.IntegerField(choices=[(0, '待替换0'), (1, '待替换1')], verbose_name='变更操作')),
            ],
            options={
                'verbose_name': '变更操作',
                'verbose_name_plural': '变更操作',
                'db_table': 'operations',
            },
        ),
        migrations.CreateModel(
            name='PCBLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardness', models.IntegerField(choices=[(0, '硬板'), (1, '软板')], verbose_name='软板/硬板')),
                ('layer', models.CharField(max_length=20, verbose_name='层')),
                ('order', models.CharField(max_length=20, verbose_name='阶')),
            ],
            options={
                'db_table': 'pcb_layers',
            },
        ),
        migrations.CreateModel(
            name='PCBStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Veneer',
            fields=[
                ('pcb_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='投板编码')),
                ('pcb_name', models.CharField(max_length=50, verbose_name='单板名称')),
                ('pcb_scale', models.IntegerField(default=0, verbose_name='单板规模')),
                ('pcb_type', models.IntegerField(choices=[(0, '设计'), (1, '加工'), (2, '已完成'), (3, 'hold'), (4, '暂不开发')], verbose_name='单板类型')),
                ('pcb_model', models.IntegerField(choices=[(0, 'UDP/SLT测试单板'), (1, 'PISI专项测试板'), (2, 'EMI专项测试板'), (3, 'UT测试单板'), (4, 'ST测试单板'), (5, '可靠性验证单板'), (6, '专有测试单板'), (7, '配套单板'), (8, '工具单板'), (9, 'pinmap评估板'), (10, '热测试单板'), (11, '其他')], verbose_name='单板形态')),
                ('pcb_procedure', models.IntegerField(choices=[(0, 'PDM'), (1, 'TPDM')], verbose_name='投板流程')),
                ('pcb_number', models.IntegerField(default=0, verbose_name='投板数量')),
                ('chip_type', models.IntegerField(choices=[(0, 'SOC'), (1, '主机PMU'), (2, '副PMU'), (3, 'Codec'), (4, 'Scharger'), (5, 'RF前端'), (6, '配套单板'), (7, '工具配套'), (8, 'SIP'), (9, '全场景模块'), (10, 'Testchip'), (11, '安全芯片'), (12, '其他')], verbose_name='芯片类型')),
                ('chip_model', models.CharField(max_length=50, verbose_name='芯片型号')),
                ('project', models.CharField(max_length=50, verbose_name='版本/技术项目')),
                ('group', models.IntegerField(choices=[(0, 'HW1'), (1, 'HW2'), (2, 'HW3'), (3, 'HW7'), (4, 'HW8'), (5, 'RF1'), (6, 'RF2'), (7, 'RF3'), (8, 'RF7'), (9, 'HWP1'), (10, 'HWP2'), (11, 'HWP3'), (12, 'HWP5'), (13, 'HWP6'), (14, 'HWP7'), (15, 'SEG'), (16, '固态存储'), (17, '其他')], verbose_name='所属组')),
                ('schedule', models.IntegerField(verbose_name='进度')),
                ('baseline', models.BooleanField(default=False, verbose_name='是否基线')),
                ('description', models.TextField(verbose_name='用途说明')),
                ('sim_req', models.CharField(max_length=50, verbose_name='仿真需求')),
                ('expect_end_date', models.DateField(verbose_name='期望设计结束时间')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('hardware_member', models.CharField(max_length=100, verbose_name='硬件设计人员')),
                ('software_member', models.CharField(max_length=100, verbose_name='互连设计人员')),
                ('qa', models.IntegerField(choices=[(0, '顾蝶花'), (1, '杨荣荣'), (2, '王浩'), (3, '张超'), (4, '康乐'), (5, '周余兵'), (6, '李哲明')], verbose_name='QA人员')),
                ('craft', models.IntegerField(choices=[(0, '王俊涛'), (1, '无线工艺')], verbose_name='工艺人员')),
                ('act_start_date', models.DateField(verbose_name='PCB设计启动时间')),
                ('act_end_date', models.DateField(verbose_name='PCB设计结束时间')),
                ('act_mach_date', models.DateField(verbose_name='PCB加工时间')),
                ('act_board_date', models.DateField(null=True, verbose_name='PCB回板时间')),
                ('modify_stage', models.IntegerField(choices=[(0, '布局'), (1, '布线')], verbose_name='原理图变更阶段')),
                ('total_pins', models.IntegerField(verbose_name='总PIN数')),
                ('incr_pins', models.IntegerField(verbose_name='增加PIN数')),
                ('modify_pins', models.IntegerField(verbose_name='改变PIN数')),
                ('decr_pins', models.IntegerField(verbose_name='减少PIN数')),
                ('uncon_pins', models.IntegerField(verbose_name='未连接PIN数')),
                ('total_nets', models.IntegerField(verbose_name='总NET数')),
                ('uncon_nets', models.IntegerField(verbose_name='未连接NET数')),
                ('imp_kind', models.CharField(max_length=10, null=True, verbose_name='拼盘种类')),
                ('pcb_layer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='veneers.PCBLayer', verbose_name='单板层阶')),
                ('pcb_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='veneers.PCBStatus', verbose_name='单板状态')),
            ],
            options={
                'verbose_name': '单板',
                'verbose_name_plural': '单板',
                'db_table': 'veneers',
            },
        ),
        migrations.AddField(
            model_name='operation',
            name='pcb_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='veneers.Veneer', verbose_name='投板编码'),
        ),
    ]
